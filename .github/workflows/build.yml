name: build
on: [push, pull_request]
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.22, stable]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    env:
      GO111MODULE: "on"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
      - run: go mod download
      - run: go build -v ./...
      - run: go test -v -race ./...
  spinner:
    strategy:
      matrix:
        go-version: [1.22, stable]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    env:
      GO111MODULE: "on"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
          working-directory: ./spinner
      - run: go mod download
        working-directory: ./spinner
      - run: go build -v ./...
        working-directory: ./spinner
      - run: go test -v -race ./...
        working-directory: ./spinner
  examples:
    strategy:
      matrix:
        go-version: [1.22, stable]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    env:
      GO111MODULE: "on"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          working-directory: ./examples
          go-version: ${{ matrix.go-version }}
          cache: true
      - run: go mod download
        working-directory: ./examples
      - run: go build -v ./...
        working-directory: ./examples
      - run: go test -v -race ./...
        working-directory: ./examples
  dependabot:
    needs: [test, examples, spinner]
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'}}
    steps:
      - id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - run: |
          gh pr review --approve "$PR_URL"
          gh pr merge --squash --auto "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
